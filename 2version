using System;

namespace RestaurantFinanceManagementSystem
{
    class Program
    {
        static void Main(string[] args)
        {
            Restaurant restaurant = new Restaurant();
            Employee cashier = new Employee("John", "Doe", "Cashier");
            restaurant.AddEmployee(cashier);
            Product burger = new Product("Burger", 5.0);
            Product sandwich = new Product("sandwich", 4.0);
            Product fish_and_chips = new Product("fish_and_chips", 3.0);
            Product chips_with_cheese = new Product("chips_with_cheese", 2.5);
            Product gyros = new Product("gyros", 10.0);
            Product сaesar_salad = new Product("сaesar_salad", 10.0);
            Product french_fries = new Product("french_fries", 2.5);
            Product sprite = new Product("sprite", 2.0);
            restaurant.AddProduct(burger);
            restaurant.AddProduct(sandwich);
            restaurant.AddProduct(fish_and_chips);
            restaurant.AddProduct(chips_with_cheese);
            restaurant.AddProduct(gyros);
            restaurant.AddProduct(сaesar_salad);
            restaurant.AddProduct(french_fries);
            restaurant.AddProduct(sprite);
            for (int i = 0; i < 60; i++)
            {
                Order order = new Order(cashier, new Product[] { burger });
                Order order2 = new Order(cashier, new Product[] { sandwich });
                Order order3 = new Order(cashier, new Product[] { fish_and_chips });
                Order order4 = new Order(cashier, new Product[] { chips_with_cheese });
                Order order5 = new Order(cashier, new Product[] { gyros });
                Order order6 = new Order(cashier, new Product[] { сaesar_salad });
                Order order7 = new Order(cashier, new Product[] { french_fries });
                Order order8 = new Order(cashier, new Product[] { sprite });
                restaurant.AddOrder(order);
                restaurant.AddOrder(order2);
                restaurant.AddOrder(order3);
                restaurant.AddOrder(order4);
                restaurant.AddOrder(order5);
                restaurant.AddOrder(order6);
                restaurant.AddOrder(order7);
                restaurant.AddOrder(order8);
            }
            double revenue = restaurant.CalculateTotalRevenue();
            double expenses = restaurant.CalculateTotalExpenses();
            Console.WriteLine("Total revenue: " + revenue);
            Console.WriteLine("Total expenses: " + expenses);
            Console.WriteLine("Net income: " + restaurant.CalculateNetIncome(revenue, expenses));
            Console.WriteLine("Monthly net income: " + restaurant.CalculateMonthlyNetIncome(revenue, expenses, 1));
        }
    }

    public class Restaurant
    {
        private double income;
        public double expenses;
        private Employee[] employees;
        private Product[] products;
        private Order[] orders;

        public Restaurant()
        {
            employees = new Employee[0];
            products = new Product[0];
            orders = new Order[0];
        }

        public void AddEmployee(Employee employee)
        {
            Array.Resize(ref employees, employees.Length + 1);
            employees[employees.Length - 1] = employee;
            expenses += employee.Salary;
        }

        public void AddProduct(Product product)
        {
            Array.Resize(ref products, products.Length + 1);
            products[products.Length - 1] = product;
        }

        public void AddOrder(Order order)
        {
            Array.Resize(ref orders, orders.Length + 1);
            orders[orders.Length - 1] = order;
            income += order.TotalPrice;
        }

        public double CalculateTotalRevenue()
        {
            return income;
        }

        public void AddExpense(double amount)
        {
            expenses += amount;
        }

        public double CalculateTotalExpenses()
        {
            double total = 0.0;
            foreach (Employee employee in employees)
            {
                total += employee.Salary;
            }
            return total;
        }

        public double CalculateNetIncome(double revenue, double expenses)
        {
            return revenue - expenses;
        }

        public double CalculateMonthlyNetIncome(double revenue, double expenses, int ordersPerMounth)
        {
            return CalculateNetIncome(revenue, expenses) * 30 - employees.Length * 8 * 20 * ordersPerMounth * products.Length;
        }
    }

    public class Employee
    {
        public string FirstName { get; }
        public string LastName { get; }
        public string Role { get; }
        public double Salary { get; }

        public Employee(string firstName, string lastName, string role)
        {
            FirstName = firstName;
            LastName = lastName;
            Role = role;
            Salary = 2000.0;
        }
    }

    public class Product
    {
        public string Name { get; }
        public double Price { get; }

        public Product(string name, double price)
        {
            Name = name;
            Price = price;
        }
    }

    public class Order
    {
        public Employee Cashier { get; }
        public Product[] Products { get; }

        public double TotalPrice
        {
            get
            {
                double total = 0.0;
                foreach (Product product in Products)
                {
                    total += product.Price;
                }
                return total;
            }
        }

        public Order(Employee cashier, Product[] products)
        {
            Cashier = cashier;
            Products = products;
        }
    }
}
